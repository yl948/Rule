## 代理集合（获取机场订阅链接内的所有节点）
proxy-providers:
  🛫 我的机场:
    type: http
    url: "机场订阅链接放到这里"
    path: ./proxies/airport.yaml
    interval: 86400
    filter: "(?i)港|hk|hongkong|hong kong|台|tw|taiwan|日本|jp|japan|新|sg|singapore|美|us|unitedstates|united states"
    exclude-filter: "高倍|直连|×10"
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 600
    override:
      additional-prefix: "🛫 我的机场-"
      additional-suffix: "-🛫 我的机场"

## 策略组
proxy-groups:
  # 基础节点选择
  - {name: 🚀 节点选择, type: select, proxies: [所有-自动, 港台日新韩-自动, 台日新韩-自动, 🇭🇰 香港自动, 🇹🇼 台湾自动, 🇯🇵 日本自动, 🇺🇸 美国自动, 🇸🇬 新加坡自动, 其他地区自动, 🇭🇰 香港节点, 🇹🇼 台湾节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇺🇸 美国节点, 其他-自动]}
  - {name: 🎯 全球直连, type: select, proxies: [DIRECT]}

  # 应用分组
  - {name: 🐮 Mixed, type: select, proxies: [🇭🇰 香港自动, 🇹🇼 台湾自动, 🇯🇵 日本自动, 🇺🇸 美国自动, 🇸🇬 新加坡自动, 其他地区自动, 🚀 节点选择, DIRECT]}
  - {name: 🦁 AI1, type: select, proxies: [🚀 节点选择, 所有-自动, 港台日新韩-自动, 台日新韩-自动, 🇭🇰 香港节点, 🇹🇼 台湾节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇺🇸 美国节点, 其他-自动, DIRECT]}
  - {name: 🦁 AI2, type: select, proxies: [🚀 节点选择, 所有-自动, 港台日新韩-自动, 台日新韩-自动, 🇭🇰 香港节点, 🇹🇼 台湾节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇺🇸 美国节点, 其他-自动, DIRECT]}
  - {name: 📘 GitHub, type: select, proxies: [🚀 节点选择, 所有-自动, 港台日新韩-自动, 台日新韩-自动, 🇭🇰 香港节点, 🇹🇼 台湾节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇺🇸 美国节点, 其他-自动, DIRECT]}
  - {name: 👯‍♂️ TikTok, type: select, proxies: [🚀 节点选择, 所有-自动, 港台日新韩-自动, 台日新韩-自动, 🇭🇰 香港节点, 🇹🇼 台湾节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇺🇸 美国节点, 其他-自动, DIRECT]}
  - {name: 🙋 Telegram, type: select, proxies: [🚀 节点选择, 所有-自动, 港台日新韩-自动, 台日新韩-自动, 🇭🇰 香港节点, 🇹🇼 台湾节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇺🇸 美国节点, 其他-自动, DIRECT]}
  - {name: 📀 流媒体, type: select, proxies: [🚀 节点选择, 所有-自动, 港台日新韩-自动, 台日新韩-自动, 🇭🇰 香港节点, 🇹🇼 台湾节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇺🇸 美国节点, 其他-自动, DIRECT]}
  - {name: 🌍 国外, type: select, proxies: [🚀 节点选择, 所有-自动, 港台日新韩-自动, 台日新韩-自动, 🇭🇰 香港节点, 🇹🇼 台湾节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇺🇸 美国节点, 其他-自动, DIRECT]}
  - {name: ➡️ 国内, type: select, proxies: [DIRECT, 🚀 节点选择]}

  # 地区节点
  - {name: 所有-自动, type: url-test, use: [🛫 我的机场], filter: ".*", url: http://www.gstatic.com/generate_204, interval: 60, tolerance: 150}
  - {name: 港台日新韩-自动, type: url-test, use: [🛫 我的机场], filter: "(广港|广台|广日|广新|广韩|广美|香港|HK|Hong Kong|🇭🇰|HongKong|台湾|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|新加坡|SG|坡|狮城|🇸🇬|Singapore|韩国|KR|首尔|春川|🇰🇷|Korea)", url: http://www.gstatic.com/generate_204, interval: 60, tolerance: 150}
  - {name: 台日新韩-自动, type: url-test, use: [🛫 我的机场], filter: "(广台|广日|广新|广韩|广美|台湾|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|新加坡|SG|坡|狮城|🇸🇬|Singapore|韩国|KR|首尔|春川|🇰🇷|Korea)", url: http://www.gstatic.com/generate_204, interval: 60, tolerance: 150}
  - {name: 🇭🇰 香港节点, type: url-test, use: [🛫 我的机场], filter: "(广港|香港|HK|Hong Kong|🇭🇰|HongKong)", url: http://www.gstatic.com/generate_204, interval: 60, tolerance: 150}
  - {name: 🇹🇼 台湾节点, type: url-test, use: [🛫 我的机场], filter: "(广台|台湾|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)", url: http://www.gstatic.com/generate_204, interval: 60, tolerance: 150}
  - {name: 🇯🇵 日本节点, type: url-test, use: [🛫 我的机场], filter: "(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)", url: http://www.gstatic.com/generate_204, interval: 60, tolerance: 150}
  - {name: 🇸🇬 新加坡节点, type: url-test, use: [🛫 我的机场], filter: "(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore)", url: http://www.gstatic.com/generate_204, interval: 60, tolerance: 150}
  - {name: 🇺🇸 美国节点, type: url-test, use: [🛫 我的机场], filter: "(广美|美|US|纽约|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|🇺🇸|United States)", url: http://www.gstatic.com/generate_204, interval: 60, tolerance: 150}
  - {name: 其他-自动, type: url-test, use: [🛫 我的机场], filter: "(柬埔|斯坦|尼泊|也纳|克兰|比利时|尔兰|立陶宛|冰岛|秘鲁|耳其|利亚|埃及|希腊|斯洛伐克|孟加|芬兰|阿联|英国|德国|南非|意大|法国|加拿|墨西|印度|越南|罗斯|瑞士|瑞典|智利|荷兰|比亚|巴西|沙特|班牙|泰国|Australia|Konghwaguk)", url: http://www.gstatic.com/generate_204, interval: 60, tolerance: 150}

  # 综合地区自动
  - {name: 🇭🇰 香港自动, type: url-test, use: [🛫 我的机场], filter: "(广港|香港|HK|Hong Kong|🇭🇰|HongKong)", url: http://www.gstatic.com/generate_204, interval: 60, tolerance: 150}
  - {name: 🇹🇼 台湾自动, type: url-test, use: [🛫 我的机场], filter: "(广台|台湾|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)", url: http://www.gstatic.com/generate_204, interval: 60, tolerance: 150}
  - {name: 🇯🇵 日本自动, type: url-test, use: [🛫 我的机场], filter: "(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)", url: http://www.gstatic.com/generate_204, interval: 60, tolerance: 150}
  - {name: 🇺🇸 美国自动, type: url-test, use: [🛫 我的机场], filter: "(广美|美|US|纽约|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|🇺🇸|United States)", url: http://www.gstatic.com/generate_204, interval: 60, tolerance: 150}
  - {name: 🇸🇬 新加坡自动, type: url-test, use: [🛫 我的机场], filter: "(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore)", url: http://www.gstatic.com/generate_204, interval: 60, tolerance: 150}
  - {name: 其他地区自动, type: url-test, use: [🛫 我的机场], filter: "(柬埔|斯坦|尼泊|也纳|克兰|比利时|尔兰|立陶宛|冰岛|秘鲁|耳其|利亚|埃及|希腊|斯洛伐克|孟加|芬兰|阿联|英国|德国|南非|意大|法国|加拿|墨西|印度|越南|罗斯|瑞士|瑞典|智利|荷兰|比亚|巴西|沙特|班牙|泰国|Australia|Konghwaguk)", url: http://www.gstatic.com/generate_204, interval: 60, tolerance: 150}

## 规则集
rule-providers:
  # 规则集格式说明：
  # type: http        # 规则集类型：http 表示从网络获取
  # behavior: domain  # 规则行为：domain（域名规则）, ipcidr（IP规则）, classical（混合规则）
  # format: text      # 文件格式：text（纯文本）, yaml（YAML格式）, json（JSON格式）

  # 1. 自定义规则集
  mixed:
    type: http
    behavior: classical
    format: text
    path: ./rules/mixed.list
    url: "https://raw.githubusercontent.com/yl948/Rule/refs/heads/main/ShellCrash/mihomo/proxy.list"
    interval: 86400

  # AI 规则集
  ai:
    type: http
    behavior: domain
    format: text
    path: ./rules/ai.list
    url: "https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/AI.list"
    interval: 86400

  ai2:
    type: http
    behavior: domain
    format: text
    path: ./rules/ai2.list
    url: "https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/AI2.list"
    interval: 86400

  # 应用规则集
  github:
    type: http
    behavior: domain
    format: text
    path: ./rules/github.list
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/GitHub/GitHub.list"
    interval: 86400

  tiktok:
    type: http
    behavior: classical
    format: text
    path: ./rules/tiktok.list
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/TikTok/TikTok.list"
    interval: 86400

  telegram:
    type: http
    behavior: ipcidr
    format: text
    path: ./rules/telegram.list
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.list"
    interval: 86400

  # 流媒体规则集
  youtube:
    type: http
    behavior: domain
    format: text
    path: ./rules/youtube.list
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.list"
    interval: 86400
  
  hbo:
    type: http
    behavior: domain
    format: text
    path: ./rules/hbo.list
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/HBO/HBO.list"
    interval: 86400
  
  disney:
    type: http
    behavior: domain
    format: text
    path: ./rules/disney.list
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Disney/Disney.list"
    interval: 86400
  
  netflix:
    type: http
    behavior: domain
    format: text
    path: ./rules/netflix.list
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.list"
    interval: 86400

  spotify:
    type: http
    behavior: domain
    format: text
    path: ./rules/spotify.list
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Spotify/Spotify.list"
    interval: 86400

  # 全局规则集
  proxy:
    type: http
    behavior: domain
    format: text
    path: ./rules/proxy.list
    url: "https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/Proxy.list"
    interval: 86400

  global:
    type: http
    behavior: classical
    format: text
    path: ./rules/global.list
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Global/Global.list"
    interval: 86400

## 规则
rules:
  # 1. 自定义规则（最高优先级）
  - RULE-SET,mixed,🐮 Mixed
  
  # 2. 特定应用规则
  - RULE-SET,ai,🦁 AI1
  - RULE-SET,ai2,🦁 AI2
  - RULE-SET,github,📘 GitHub
  - RULE-SET,tiktok,👯‍♂️ TikTok
  - RULE-SET,telegram,🙋 Telegram
  - RULE-SET,youtube,🌍 国外
  - RULE-SET,hbo,🌍 国外
  - RULE-SET,disney,🌍 国外
  - RULE-SET,netflix,🌍 国外
  - RULE-SET,spotify,🌍 国外
  - RULE-SET,proxy,🌍 国外
  - RULE-SET,global,🌍 国外
  
  # 3. 兜底规则（最低优先级）
  - MATCH,🎯 全球直连
