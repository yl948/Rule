# 基础配置部分
mixed-port: 7890      # 混合端口 - HTTP(S) 和 SOCKS 代理
allow-lan: true      # 允许局域网连接
bind-address: '*'     # 监听地址
mode: rule           # 路由模式: rule（规则） / global（全局） / direct（直连）
log-level: info      # 日志级别
ipv6: false          # IPv6 开关

# DNS 配置
dns:
  enable: true       # 启用自定义 DNS
  listen: 0.0.0.0:53 # DNS 监听地址
  default-nameserver: # 默认 DNS 服务器
    - 223.5.5.5      # 阿里 DNS
    - 119.29.29.29   # 腾讯 DNS
  nameserver:        # 常规 DNS 服务器
    - 223.5.5.5      # 阿里 DNS
    - 119.29.29.29   # 腾讯 DNS

# 代理配置（示例）
proxies:
  # 这里添加您的代理服务器配置
  - name: "示例代理"    # 代理名称
    type: ss           # 代理类型：ss, vmess, trojan 等
    server: server.com # 服务器地址
    port: 443          # 服务器端口
    cipher: chacha20-ietf-poly1305  # 加密方式
    password: password # 密码

# 代理提供者配置（订阅）
proxy-providers:
  my-subscription:     # 订阅名称
    type: http         # 订阅类型
    url: "填入你的订阅链接"  # 订阅地址
    interval: 3600     # 自动更新间隔（秒）
    path: /home/用户名/.config/mihomo/proxy-providers/my-subscription.yaml  # 订阅文件路径
    health-check:      # 健康检查配置
      enable: true     # 启用健康检查
      interval: 600    # 检查间隔（秒）
      url: http://cp.cloudflare.com/generate_204  # 检查地址

# Rule Providers 配置（规则集）
rule-providers:
  ai1:                # AI相关规则集1
    type: http        # 规则类型
    behavior: classical  # 规则行为
    url: "https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/AI.list"  # 规则地址
    path: ./rule-providers/ai1.yaml  # 规则文件本地路径
    interval: 86400   # 更新间隔（秒）

  ai2:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/AI2.list"
    path: ./rule-providers/ai2.yaml
    interval: 86400

  github:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/GitHub/GitHub.list"
    path: ./rule-providers/github.yaml
    interval: 86400

  tiktok:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/TikTok/TikTok.list"
    path: ./rule-providers/tiktok.yaml
    interval: 86400

  telegram:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.list"
    path: ./rule-providers/telegram.yaml
    interval: 86400

  streaming:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.list"
    path: ./rule-providers/streaming.yaml
    interval: 86400

  global:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Global/Global.list"
    path: ./rule-providers/global.yaml
    interval: 86400

  plex:
    type: http
    behavior: classical
    url: "https://raw.githubusercontent.com/yl948/Rule/refs/heads/main/Clash/plex.list"
    path: ./rule-providers/plex.yaml
    interval: 86400

# 代理组配置
proxy-groups:
  # 选择类型代理组
  - name: "👽 AI1"    # AI服务代理组1
    type: select      
    proxies:          
      - 所有节点-自动   
      - 港台日新韩-自动 
      - 香港-自动      
      - 台湾-自动      
      - 日本-自动      
      - 新加坡-自动    
      - 韩国-自动      
      - 美国-自动      
      - 其他地区-自动   
      # - DIRECT        

  - name: "👽 AI2"    # AI服务代理组2
    type: select      
    proxies:          
      - 所有节点-自动   
      - 港台日新韩-自动 
      - 香港-自动      
      - 台湾-自动      
      - 日本-自动      
      - 新加坡-自动    
      - 韩国-自动      
      - 美国-自动      
      - 其他地区-自动   
      # - DIRECT        

  - name: "📘 GitHub"    # GitHub 代理组
    type: select        
    proxies:            
      - 所有节点-自动     
      - 港台日新韩-自动   
      - 香港-自动        
      - 台湾-自动        
      - 日本-自动        
      - 新加坡-自动      
      - 韩国-自动        
      - 美国-自动        
      - 其他地区-自动     
      
  - name: "👯‍♂️ TikTok"    # TikTok 代理组
    type: select        
    proxies:            
      - 所有节点-自动     
      - 港台日新韩-自动   
      - 香港-自动        
      - 台湾-自动        
      - 日本-自动        
      - 新加坡-自动      
      - 韩国-自动        
      - 美国-自动        
      - 其他地区-自动     
      # - DIRECT          

  - name: "🙋 Telegram"    # Telegram 代理组
    type: select        
    proxies:            
      - 所有节点-自动     
      - 港台日新韩-自动   
      - 香港-自动        
      - 台湾-自动        
      - 日本-自动        
      - 新加坡-自动      
      - 韩国-自动        
      - 美国-自动        
      - 其他地区-自动     
      # - DIRECT          

  - name: "📀 流媒体"    # 流媒体代理组
    type: select        
    proxies:            
      - 所有节点-自动     
      - 港台日新韩-自动   
      - 香港-自动        
      - 台湾-自动        
      - 日本-自动        
      - 新加坡-自动      
      - 韩国-自动        
      - 美国-自动        
      - 其他地区-自动     
      # - DIRECT          

  - name: "🌍 Plex"    # Plex 代理组
    type: select        
    proxies:            
      - 所有节点-自动     
      - 港台日新韩-自动   
      - 香港-自动        
      - 台湾-自动        
      - 日本-自动        
      - 新加坡-自动      
      - 韩国-自动        
      - 美国-自动        
      - 其他地区-自动     
      # - DIRECT          

  - name: "🌍 国外"    # 国外代理组
    type: select        
    proxies:            
      - 所有节点-自动     
      - 港台日新韩-自动   
      - 香港-自动        
      - 台湾-自动        
      - 日本-自动        
      - 新加坡-自动      
      - 韩国-自动        
      - 美国-自动        
      - 其他地区-自动     
      # - DIRECT          

  # 自动测试类型代理组
  - name: "所有节点-自动"  # 所有节点自动选择组
    type: url-test    
    use:              
      - my-subscription
    url: http://cp.cloudflare.com/generate_204
    interval: 60      
    tolerance: 150    

  - name: "港台日新韩-自动"  
    type: url-test    
    use:              
      - my-subscription
    filter: "(港|台|日|新加坡|韩)"  
    url: http://cp.cloudflare.com/generate_204
    interval: 60      
    tolerance: 150    

  - name: "香港-自动"      
    type: url-test
    use:
      - my-subscription
    filter: "(?i)(港|HK|Hong Kong|🇭🇰|HongKong)"
    url: http://cp.cloudflare.com/generate_204
    interval: 60
    tolerance: 150

  - name: "台湾-自动"      
    type: url-test
    use:
      - my-subscription
    filter: "(?i)(台|TW|Taiwan|🇹🇼)"
    url: http://cp.cloudflare.com/generate_204
    interval: 60
    tolerance: 150

  - name: "日本-自动"      
    type: url-test
    use:
      - my-subscription
    filter: "(?i)(日本|JP|Japan|🇯🇵)"
    url: http://cp.cloudflare.com/generate_204
    interval: 60
    tolerance: 150

  - name: "新加坡-自动"    
    type: url-test
    use:
      - my-subscription
    filter: "(?i)(新|狮城|SG|Singapore|🇸🇬)"
    url: http://cp.cloudflare.com/generate_204
    interval: 60
    tolerance: 150

  - name: "韩国-自动"      
    type: url-test
    use:
      - my-subscription
    filter: "(?i)(韩|KR|Korea|🇰🇷)"
    url: http://cp.cloudflare.com/generate_204
    interval: 60
    tolerance: 150

  - name: "美国-自动"      
    type: url-test
    use:
      - my-subscription
    filter: "(?i)(美|US|United States|🇺🇸)"
    url: http://cp.cloudflare.com/generate_204
    interval: 60
    tolerance: 150

  - name: "其他地区-自动"   
    type: url-test
    use:
      - my-subscription
    filter: "(?i)^(?!.*(港|HK|Hong Kong|台|TW|Taiwan|日本|JP|Japan|新|狮城|SG|Singapore|韩|KR|Korea|美|US|United States))"
    url: http://cp.cloudflare.com/generate_204
    interval: 60
    tolerance: 150

# 规则配置
rules:
  # 特定规则优先匹配
  - RULE-SET,ai1,👽 AI1              # AI相关网站走 AI1 代理组
  - RULE-SET,ai2,👽 AI2              # AI相关网站走 AI2 代理组
  - RULE-SET,github,📘 GitHub         # GitHub 相关走 GitHub 代理组
  - RULE-SET,tiktok,👯‍♂️ TikTok       # TikTok 相关走 TikTok 代理组
  - RULE-SET,telegram,🙋 Telegram     # Telegram 相关走 Telegram 代理组
  - RULE-SET,streaming,📀 流媒体      # 流媒体相关走流媒体代理组
  - RULE-SET,global,🌍 国外           # 国外网站走国外代理组
  - RULE-SET,plex,🎬 Plex           # Plex 相关走 Plex 代理组
  # 其他流量默认直连
  - MATCH,DIRECT                     # 未匹配规则的流量直接连接 
